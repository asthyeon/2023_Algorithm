import sys
sys.stdin = open('input.txt')
input = sys.stdin.readline

"""
# 공통 부분 문자열
[출력: 두 문자열에 모두 포함 된 부분 문자열 중 가장 긴 것의 길이 출력]
1. 어떤 문자열 s의 부분 문자열 t란, s에 t가 연속으로 나타나는 것
2. 빈 문자열도 공통문자열이 될 수 있음
@ 풀이
(1) 브루트포스로 문자열 다 검사해보기 -> 시간초과
(2) dp로 풀기
 - 같은 문자열이면 dp[x - 1][y - 1] + 1
 - 이어져야 하기 때문에 끊기면 0으로 만들기

      A  B  R  A  C  A  D  A  B  R  A
 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
E [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
C [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
A [0, 1, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1],
D [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
A [0, 1, 0, 0, 1, 0, 1, 0, 4, 0, 0, 1],
D [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],
A [0, 1, 0, 0, 1, 0, 1, 0, 3, 0, 0, 1],
B [0, 0, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0],
R [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 5, 0],
B [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],
C [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
R [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
D [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
A [0, 1, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1],
R [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
A [0, 1, 0, 0, 2, 0, 1, 0, 1, 0, 0, 2]]

"""


# dp 함수
def dynamic_programming(s1, s2):
    dp = [[0] * (len(s1) + 1) for _ in range(len(s2) + 1)]

    for x in range(1, len(s2) + 1):
        for y in range(1, len(s1) + 1):
            # 같은 문자열이면 대각선 위의 값 + 1
            if s2[x - 1] == s1[y - 1]:
                dp[x][y] = dp[x - 1][y - 1] + 1

    # 가장 큰 값 찾기
    answer = 0
    for row in dp:
        if answer < max(row):
            answer = max(row)
    return answer


# 문자열 입력받기
s1 = input().rstrip()
s2 = input().rstrip()

print(dynamic_programming(s1, s2))