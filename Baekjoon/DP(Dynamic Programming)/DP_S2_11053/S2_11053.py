import sys
sys.stdin = open('input.txt')

"""
# 수열 A가 주어졌을 때 가장 긴 증가하는 부분 수열 구하고 길이 출력하기
@ 풀이
(1) dp로 풀기
(2) 경우의 수(각 수가 마지막일 때의 길이 구해보기)
     [10]
길이  1
     [10, 20]
길이  1   2
     [10, 20, 10]
길이  1   2   1
     [10, 20, 10, 30]
길이  1   2   1   3
     [10, 20, 10, 30, 20]
길이  1   2   1   3   2
     [10, 20, 10, 30, 20, 50]
길이  1   2   1   3   2   4
(3) 어떤 수가 왔을 때 자기보다 작은 수 중에 가장 큰 값 +1로 만들기
"""


# dp 함수
def dp(N, A):
    dp = [0] * (N + 1)
    dp[1] = 1
    
    if N >= 2:
        for i in range(2, N + 1):
            # 기본 길이 1 부여
            dp[i] = 1
            # 자기보다 작은 수 중에서 가장 큰 값 찾기
            for j in range(1, i):
                # 자기보다 값이 작고
                if A[i] > A[j]:
                    # 길이가 가장 길다면 교체하기
                    if dp[i] - 1 < dp[j]:
                        dp[i] = dp[j] + 1

    return max(dp)


# 수열 A의 크기: N
N = int(input())

# 수열: A
A = list(map(int, input().split()))
# 인덱스 조정을 위해 0 삽입하기
A.insert(0, 0)

print(dp(N, A))